openapi: 3.0.3
servers:
  - url: http://localhost:8080/api/v1
    description: Local - Development
  - url: https://tuos.herokuapp.com/api/v1
    description: Heroku - Development
  - url: https://tuos.azurewebsites.net/api/v1
    description: Azure WebAppService - Production
info:
  description: Tuos standard API for third-party access
  version: 0.0.1
  title: Tuos API
  contact:
    name: Developer
    email: admin@skiddph.ml
    url: https://github.com/skiddph/tuos
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Auth
    description: Authentication endpoints
  - name: Session
    description:  Session endpoints
  - name: User
    description: User Read, Update, and Delete endpoints
paths:
# Auth
  /auth/register:
    post:
      tags:
        - Auth
      description: Register user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                pass:
                  type: string
                name:
                  type: string
                email:
                  type: string
                data:
                  type: object
                return_url:
                  type: string
                  description: Fallback url for email verification link on success
                error_url:
                  type: string
                  description: Fallback url for email verification link on error
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      name: 
                        type: string
                      email:
                        type: string
                      email_expire:
                        type: number
                      email_verified:
                        type: boolean
                      created_at:
                        type: number
                      updated_at:
                        type: number
                      status:
                        type: string
                      role:
                        type: string
                      data:
                        type: object
        500:
          description: SERVER ERROR
  /auth/login:
    post:
      tags:
        - Auth
      description: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                pass:
                  type: string
                return_url:
                  type: string
                  description: Fallback url for email verification link on success
                error_url:
                  type: string
                  description: Fallback url for email verification link on error
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      name: 
                        type: string
                      email:
                        type: string
                      email_expire:
                        type: number
                      email_verified:
                        type: boolean
                      created_at:
                        type: number
                      updated_at:
                        type: number
                      status:
                        type: string
                      role:
                        type: string
                      data:
                        type: object
        default:
          description: Server Error
  /auth/email:
    get:
      description: Email verification link
      tags:
       - Auth
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
        500:
          description: Error
  /auth/password:
    get:
      description: Verify reset password link
      tags:
       - Auth
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
        500:
          description: Error
    post:
      description: Reset password
      tags:
       - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                pass:
                  type: string
                return_url:
                  type: string
                error_url:
                  type: string
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    type:
                      type: string
                    message:
                      type: string
        500:
          description: Error
  /auth/token:
    post:
      description: Refresh token
      security:
       - BearerAuth: []
      tags:
       - Auth
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                    token:
                      type: string
        500:
          description: Error
  /auth/logout:
    delete:
      description: Logout current user
      tags:
       - Auth
      security:
       - BearerAuth: []
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    type:
                      type: string
                    message:
                      type: string
        500:
          description: Error
  /auth/logout/all:
    delete:
      description: Logout all user sessions except current
      tags:
       - Auth
      security:
       - BearerAuth: []
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    type:
                      type: string
                    message:
                      type: string
        500:
          description: Error
  /auth/logout/session/{id}:
    delete:
      description: Logout specific user sessions
      tags:
       - Auth
      security:
       - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    type:
                      type: string
                    message:
                      type: string
        500:
          description: Error
# Session
  /auth/session:
    get:
      description: Read signed-in user session data
      tags:
        - Session
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user_id: 
                        type: string
                      created_at:
                        type: number
                      device:
                        type: string
                      ip:
                        type: string
                      is_current:
                        type: boolean
        500:
          description: Error
  /auth/session/{id}:
    get:
      description: Read signed-in user other session data
      tags:
        - Session
      security:
        - BearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        description: session id
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user_id: 
                        type: string
                      created_at:
                        type: number
                      device:
                        type: string
                      ip:
                        type: string
                      is_current:
                        type: boolean
        500:
          description: Error
  /auth/sessions/all:
    get:
      description: Read signed-in user all session data
      tags:
        - Session
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  size:
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        user_id: 
                          type: string
                        created_at:
                          type: number
                        device:
                          type: string
                        ip:
                          type: string
                        is_current:
                          type: boolean
                    
        500:
          description: Error
  /auth/sessions/{page}/{items}:
    get:
      description: Read signed-in user session data
      tags:
        - Session
      security:
        - BearerAuth: []
      parameters:
      - name: page
        in: path
        required: true
        description: page
        schema:
          type: number
          default: 1
      - name: items
        in: path
        required: true
        description: page
        schema:
          type: number
          default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  size:
                    type: number
                  totalDocs: 
                    type: number
                  limit: 
                    type: number
                  totalPages:
                    type: number
                  page: 
                    type: number
                  pagingCounter:
                    type: number
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage: 
                    type: number
                  nextPage: 
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        user_id: 
                          type: string
                        created_at:
                          type: number
                        device:
                          type: string
                        ip:
                          type: string
                        is_current:
                          type: boolean           
        500:
          description: Error
# User
  /user:
    get:
      description: Read signed-in user public data
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      email:
                        type: string
                      email_expire:
                        type: number
                      email_verified:
                        type: boolean
                      created_at:
                        type: number
                      updated_at:
                        type: number
                      status:
                        type: string
                      role:
                        type: string
                      data:
                        type: object
        500:
          description: Server Error
    put:
      description: update user
      tags:
       - User
      security:
       - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                pass:
                  type: string
                npass: 
                  type: string
                name:
                  type: string
                email:
                  type: string
                data:
                  type: object
                return_url:
                  type: string
                  description: Fallback url for email verification link on success
                error_url:
                  type: string
                  description: Fallback url for email verification link on error
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      name: 
                        type: string
                      email:
                        type: string
                      email_expire:
                        type: number
                      email_verified:
                        type: boolean
                      created_at:
                        type: number
                      updated_at:
                        type: number
                      status:
                        type: string
                      role:
                        type: string
                      data:
                        type: object
        500:
          description: Server Error
    delete:
      description: delete user
      tags:
       - User
      security:
       - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        500:
          description: Server Error 
  /user/check:
    post:
      description: Check if user exists
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        500:
          description: Server Error
  /user/check/{user}:
    get:
      description: Check if user exists
      tags:
        - User
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
        500:
          description: Server Error
  /user/{user}:
    get:
      description: Read other user public data
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
      - name: user
        in: path
        required: true
        description: the user identifier, as userId 
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                      name: 
                        type: string
                      email:
                        type: string
                      email_expire:
                        type: number
                      email_verified:
                        type: boolean
                      created_at:
                        type: number
                      updated_at:
                        type: number
                      status:
                        type: string
                      role:
                        type: string
                      data:
                        type: object
        500:
          description: Server Error
  /users/{page}/{items}:
    get:
      description: Read users data
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
      - name: page
        in: path
        required: true
        description: page
        schema:
          type: number
          default: 1
      - name: items
        in: path
        required: true
        description: page
        schema:
          type: number
          default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  size:
                    type: number
                  totalDocs: 
                    type: number
                  limit: 
                    type: number
                  totalPages:
                    type: number
                  page: 
                    type: number
                  pagingCounter:
                    type: number
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage: 
                    type: number
                  nextPage: 
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        user:
                          type: string
                        name: 
                          type: string
                        email:
                          type: string
                        email_expire:
                          type: number
                        email_verified:
                          type: boolean
                        created_at:
                          type: number
                        updated_at:
                          type: number
                        status:
                          type: string
                        role:
                          type: string
                        data:
                          type: object           
        500:
          description: Error
